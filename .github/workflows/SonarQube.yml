name: SonarQube

on:
  push:
    branches:
      - main  # Trigger on push to the 'main' branch
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarQubeScan1:
    name: sonarQubeScan1
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # Install dependencies
      - name: Install Dependencies
        run: npm install

      # Start the application in the background
      - name: Start application
        run: |
          npm start & 
          sleep 30 # Give the server some time to start

      # Run Cypress tests with specific spec file
      - name: Run Cypress tests
        run: |
          npx cypress run --spec "cypress/e2e/spec.cy.js"

      # Debug step to verify environment variables
      - name: Debug SonarQube Configuration
        run: |
          echo "SonarQube URL: ${{ secrets.SONAR_HOST_URL }}"
          echo "Token exists: ${{ secrets.SONAR_TOKEN != '' }}"

      # Run SonarQube scan with the new configuration
      - name: SonarQube Scan 1
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Analysis token associated with your project
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: .  # The root directory of your iPlant-frontend project

      # Add error handling for SonarQube status
      - name: Check SonarQube Status
        if: failure()
        run: |
          echo "SonarQube scan failed. Please check the configuration and logs above."
          exit 1
